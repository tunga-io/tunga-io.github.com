- name: User
  model: TungaUser
  attributes:
    schema:
      - name: id
        type: int
        desc: primary key
        required: auto
      - name: username
        type: string
        desc: unique alphamumeric identifier
        required: yes
      - name: email
        type: string
        desc: contact email address
        required: yes
      - name: first_name
        type: string
        desc: user's given name
        required: yes
      - name: last_name
        type: string
        desc: user's surname
        required: yes
      - name: date_joined
        type: datetime
        desc: date and time at which the user was joined Tunga
        required: auto
      - name: type
        type: int
        desc: |
          type of user
          ```
          developer, project_owner, project_manager, admin
          ```
      - name: image
        type: string
        desc: relative local path of user's avatar
      - name: payoneer_status
        type: string
        desc: |
          current status of user's Payoneer application

          one of `initial, pending, approved or declined`

          default: `initial`
    api:
      - name: display_name
        type: string
        desc: user's full name
      - name: avatar_url
        type: string
        desc: absolute url of user's avatar
      - name: display_type
        type: string
        desc: |
          display friendly representation of the user type

          one of `Developer, Project Owner or Project Manager`
      - name: is_developer
        type: boolean
        desc: indicates is user is a developer
      - name: is_project_manager
        type: boolean
        desc: indicates is user is a project manager
      - name: is_project_owner
        type: boolean
        desc: indicates is user is a project owner/ client
      - name: is_admin
        type: boolean
        desc: indicates is user is an admin
      - name: profile
        type: Profile
        internal: true
        desc: user's profile object
  api:
    - title: Inviting users
      url: invite
    - title: Get current logged in user
      url: https://tunga.io/api/docs/#!/auth/auth_verify_list
    - title: Manage currently logged in user
      url: me
    - title: Manage users
      url: user
- name: Profile
  model: UserProfile
  attributes:
    schema:
      - name: id
        type: int
        desc: primary key
        required: auto
      - name: user
        type: User
        internal: true
        desc: owner of the profile
        required: auto
      - name: country
        type: string
        desc: |
          user's country of residence

          must be an [ISO 3166-1 alpha-2 country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)

          e.g `UG for Uganda, NL - The Netherlands`
      - name: city
        type: string
        desc: user's city of residence
      - name: street
        type: string
        desc: user's street of residence
      - name: plot_number
        type: string
        desc: user's plot number of residence
      - name: postal_code
        type: string
        desc: user's postal code of residence
      - name: postal_address
        type: string
        desc: user's postal address of residence
      - name: phone_number
        type: string
        desc: user's phone number
      - name: skills
        type: |
          list<[Skill](#Skill)>
        desc: |
          a list of the user's skills

          saved and parsed as a string of comma separated values e.g

          ```
          React.js, Django, "Amazon Web Services"
          ```
      - name: vat_number
        type: string
        desc: user's vat number
      - name: id_document
        type: string
        desc: |
          absolute url of userâ€™s
          only applies to clients
      - name: skype_id
        type: string
        desc: user's skype id
    api:
      - name: country_name
        type: string
        desc: full country name e.g `Uganda` for `UG`
      - name: city_name
        type: string
        desc: string reprensentation of city object
      - name: location
        type: string
        desc: |
          `City, Country` location e.g `Kampala, Uganda`
      - name: skills
        type: |
          list<[Skill](#Skill)>
        desc: |
          list of [Skill](#Skill) objects
      - name: skills_details
        type: |
          hash<list<[Skill](#Skill)>>
        desc: |
          hash of [Skill](#Skill) object lists where each hash key is a skill category

          ```
          language, framework, platform, library, storage, api and other
          ```
  api:
    - title: Manage currently logged in user
      url: me
- name: Company
  model: Company
  attributes:
    schema:
      - name: id
        type: int
        desc: primary key
        required: auto
      - name: user
        type: User
        internal: true
        desc: user who created the company
        required: auto
      - name: name
        type: string
        desc: registered name of the company
      - name: country
        type: string
        desc: |
          country in which company is located

          must be an [ISO 3166-1 alpha-2 country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)

          e.g `UG for Uganda, NL - The Netherlands`
      - name: city
        type: string
        desc: city in which company is located
      - name: street
        type: string
        desc: company street address
      - name: plot_number
        type: string
        desc: company plot number
      - name: postal_code
        type: string
        desc: company postal code
      - name: postal_address
        type: string
        desc: company postal address
      - name: tel_number
        type: string
        desc: company telephone number
      - name: vat_number
        type: string
        desc: company vat number
      - name: reg_no
        type: string
        desc: company registration number
      - name: website
        type: string
        desc: company website
      - name: bio
        type: string
        desc: a brief decription of the company
      - name: skills
        type: |
          list<[Skill](#Skill)>
        desc: |
                a list of the skills needed by the company

                saved and parsed as a string of comma separated values e.g

                ```
                React.js, Django, "Amazon Web Services"
                ```
    api:
      - name: country_name
        type: string
        desc: full country name e.g `Uganda` for `UG`
      - name: city_name
        type: string
        desc: string reprensentation of city object
      - name: location
        type: string
        desc: |
          `City, Country` location e.g `Kampala, Uganda`
      - name: skills
        type: |
          list<[Skill](#Skill)>
        desc: |
          list of [Skill](#Skill) objects
      - name: skills_details
        type: |
          hash<list<[Skill](#Skill)>>
        desc: |
          hash of [Skill](#Skill) object lists where each hash key is a skill category

          ```
          language, framework, platform, library, storage, api and other
          ```
  api:
    - title: Manage currently logged in companies
      url: companies
- name: Skill
  model: Skill
  attributes:
    schema:
      - name: id
        type: int
        desc: primary key
        required: auto
      - name: name
        type: string
        desc: |
          name of the skill or product

          e.g `MongoDB, JavaScript e.t.c`
        required: yes
- name: Education
  model: Education
  attributes:
    schema:
      - name: id
        type: int
        desc: primary key
        required: auto
      - name: user
        type: User
        internal: true
        desc: owner of the education info
        required: auto
      - name: institution
        type: string
        desc: name of the institution/ school
        required: yes
      - name: award
        type: string
        desc: name of the award after e.g `Bachelor of Science in Mathematics`
        required: yes
      - name: start_month
        type: number
        desc: |
          integer for start month for duration of education award

          values `1 to 12` for `January to December`
        required: yes
      - name: start_year
        type: number
        desc: start year for duration of education award
        required: yes
      - name: end_month
        type: number
        desc: |
          integer for end month for duration of education award

          values `1 to 12` for `January to December`
      - name: end_year
        type: number
        desc: end year for duration of education award
      - name: details
        type: string
        desc: detailed description of the education award
        required: yes
      - name: created_at
        type: datetime
        required: auto
        desc: timestamp of when the object was created
  api:
    - title: Manage education
      url: education
- name: Experience
  model: Work
  attributes:
    schema:
      - name: id
        type: int
        desc: primary key
        required: auto
      - name: user
        type: User
        internal: true
        desc: owner of the education info
        required: auto
      - name: company
        type: string
        desc: name of the company
        required: yes
      - name: position
        type: string
        desc: position/title of the company after e.g `Senior Software Engineer`
        required: yes
      - name: start_month
        type: number
        desc: |
          integer for start month for duration of education award

          values `1 to 12` for `January to December`
        required: yes
      - name: start_year
        type: number
        desc: start year for duration of education award
        required: yes
      - name: end_month
        type: number
        desc: |
          integer for end month for duration of education award

          values `1 to 12` for `January to December`
      - name: end_year
        type: number
        desc: end year for duration of education award
      - name: details
        type: string
        desc: detailed description of the education award
        required: yes
      - name: created_at
        type: datetime
        required: auto
        desc: timestamp of when the object was created
  api:
    - title: Manage experience
      url: work
- name: Project
  model: Project
  attributes:
    schema:
      - name: id
        type: int
        desc: primary key
        required: auto
      - name: user
        type: User
        internal: true
        desc: user that created the project (owner by default)
        required: auto
      - name: title
        type: string
        required: yes
        desc: brief title of the project
      - name: description
        type: string
        required: yes
        desc: more detailed decription of the project
      - name: owner
        type: User
        internal: true
        desc: the owner of the project (overrides user when set)
      - name: pm
        type: User
        internal: true
        desc: project manager for the project
      - name: skills
        type: |
          list<[Skill](#Skill)>
        desc: |
          a list of skills needed to complete the project

          saved and parsed as a string of comma separated values e.g

          ```
          React.js, Django, "Amazon Web Services"
          ```
        required: yes
      - name: budget
        type: string
        desc: budget for the project
      - name: currency
        type: string
        desc: |
          [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code for the currency in which the payment will be made

          default: `EUR`
        required: auto
      - name: type
        type: string
        desc: |
          type of project

          one of `web, mobile, other`

          default: `other`
        required: yes
      - name: expected_duration
        type: string
        desc: |
          type of project

          one of `2w - 2 weeks, 6m - 6 months, permanent`

          default: `none`
      - name: deadline
        type: date
        desc: desired deadline for the project
      - name: client_survey_enabled
        type: boolean
        desc: |
          determines if surveys are enabled for this clients

          default: `true`
        required: auto
      - name: pm_updates_enabled
        type: boolean
        desc: |
          determines if updates are enabled for this pm

          default: `true`
        required: auto
      - name: created_at
        type: datetime
        required: auto
        desc: timestamp of when the object was created
      - name: archived
        type: boolean
        desc: indicates whether the object is archived
      - name: archived_at
        type: datetime
        required: auto
        desc: timestamp of when the object was archived
  api:
    - title: Manage projects
      url: project
- name: Document
  model: TaskDocument
  attributes:
    schema:
      - name: id
        type: int
        desc: primary key
        required: auto
      - name: project
        type: Project
        internal: true
        desc: |
          [Project](#Project) object the document is related to
        required: yes
      - name: url
        type: string
        desc: absolute url for the document, used for shared documents links e.g Google Drive and Dropbox
      - name: file
        type: object
        desc: |
          Uploaded file object

          used for directly uploaded documents
      - name: type
        type: string
        desc: |
          type of document

          one of
          ```
          estimate, proposal, planning, requirements, wireframes, timeline, other
          ```
        required: yes
      - name: description
        type: string
        desc: description of the document
      - name: created_by
        type: User
        internal: true
        desc: user that created the document
        required: auto
      - name: created_at
        type: datetime
        required: auto
        desc: timestamp of when the object was created
    api:
      - name: download_url
        type: string
        desc: absolute url for the document
  api:
    - title: Manage documents
      url: document
- name: Participation
  model: Participation
  attributes:
    schema:
      - name: id
        type: int
        desc: primary key
        required: auto
      - name: project
        type: Project
        internal: true
        desc: |
          [Project](#Project) the user is participating to
        required: yes
      - name: user
        type: User
        internal: true
        desc: participating user
        required: yes
      - name: status
        type: string
        desc: |
          status of the user's participation

          one of `initial, accepted, rejected`

          default: `initial`
      - name: updates_enabled
        type: boolean
        desc: |
          determines if updates are enabled for this participant

          default: `true`
        required: auto
      - name: created_by
        type: User
        internal: true
        desc: user that created the participation object
        required: auto
      - name: created_at
        type: datetime
        required: auto
        desc: timestamp of when the object was created
  api:
    - title: Manage participation
      url: participation
- name: Invoice
  model: Invoice
  attributes:
    schema:
      - name: id
        type: int
        desc: primary key
        required: auto
      - name: project
        type: Project
        internal: true
        desc: |
          [Project](#Project) for the invoice
        required: yes
      - name: user
        type: User
        internal: true
        desc: user invoicing (for `tunga` invoices) or being invoiced (for `client` and `developer`)
        required: true
      - name: type
        type: string
        desc: |
          type of invoice

          one of `client, tunga, developer`

          name denotes entity being invoiced.

          `developer` is only for historical purposes
        required: yes
      - name: title
        type: string
        desc: |
          title of the invoice

          default: title of the project
        required: no
      - name: amout
        type: number
        desc: amount that will be paid
        required: yes
      - name: currency
        type: string
        desc: |
          [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code for the currency in which the payment will be made

          default: `EUR`
        required: auto
      - name: tax_rate
        type: number
        desc: tax rate as a percentage e.g `20` for `20%`
        required: yes
      - name: processing_fee
        type: number
        desc: |
          processing fee that will be charged for the transaction

          default: `0`
        required: yes
      - name: created_by
        type: User
        internal: true
        desc: user that created the invoice
        required: auto
      - name: created_at
        type: datetime
        required: auto
        desc: timestamp of when the object was created
      - name: number
        type: string
        desc: unique invoice number for this invoice
        required: auto
      - name: batch_ref
        type: string (uuid4)
        desc: |
          unique reference for invoices created by a batch request e.g one payout to multiple devs
        required: false
      - name: paid
        type: boolean
        desc: indicates whether invoice has been paid
      - name: paid_at
        type: datetime
        desc: timestamp of when payment receipt was confirmed
      - name: status
        type: string
        desc: |
          one of `pending, approved or canceled`

          default: `approved` for `client` and `developer` invoice types and `pending` for tunga invoices

          setting this field to `approved` for `tunga` invoice types will trigger a payout
        required: auto
    api:
      - name: tax_amount
        type: number
        desc: |
          tax amount calculated from the amount and tax_rate

          ```
          amount * (tax_rate/100)
          ```
        required: auto
  api:
    - title: Manage invoices
      url: invoices
- name: Payment
  model: Payment
  attributes:
    schema:
      - name: id
        type: int
        desc: primary key
        required: auto
      - name: invoice
        type: Invoice
        internal: true
        desc: |
          [Invoice](#Invoice) for which the payment will be made
        required: yes
      - name: amout
        type: string
        desc: amount that will be paid
        required: yes
      - name: currency
        type: string
        desc: |
          [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code for the currency in which the payment will be made

          default: `EUR`
        required: auto
      - name: payment_method
        type: string
        desc: |
          one of `stripe, bank, bitcoin, bitonic`

          all new payments are made with either `stripe` or `bank`, However, `bitcoin` and `bitonic` are supported for historical data
        required: yes
      - name: paid_at
        type: datetime
        desc: timestamp of when payment receipt was confirmed
      - name: created_by
        type: User
        internal: true
        desc: user that created the payment
        required: auto
      - name: created_at
        type: datetime
        required: auto
        desc: timestamp of when the object was created
    api:
      - name: type
        type: string
        desc: |
          type of payment

          one of `sale, purchase`

          `sale` for client and developer invoices and `purchase` for tunga invoices
  api:
    - title: Manage payments
      url: payments
- name: ProgressEvent
  model: ProgressEvent
  attributes:
    schema:
      - name: id
        type: int
        desc: primary key
        required: auto
      - name: project
        type: Project
        internal: true
        desc: |
          [Project](#Project) object associated with the event
        required: yes
      - name: type
        type: string
        desc: |
          event type

          ```
          developer = Developer Update,
          pm = PM Report,
          client = Client survey,
          milestone = Milestone (for all),
          internal = Internal Milestone (only PMs and Devs)
          ```
        required: yes
      - name: title
        type: string
        required: yes
        desc: title of the event
      - name: description
        type: string
        required: yes
        desc: description of the vent
      - name: due_at
        type: date
        required: yes
        desc: date when a report for the event is due
      - name: last_reminder_at
        type: datetime
        desc: timestamp of when the last reminder about the event was sent to participants
        required: auto
      - name: created_by
        type: User
        internal: true
        desc: user that created the progress event
        required: auto
      - name: created_at
        type: datetime
        required: auto
        desc: timestamp of when the object was created
    api:
      - name: is_participant
        type: boolean
        desc: true if current user is a participant in event
        required: auto
      - name: participants
        type: User
        internal: true
        desc: list of all event participants
        required: auto
  api:
    - title: Manage progress events
      url: progress-event
- name: ProgressReport
  model: ProgressReport
  attributes:
    schema:
      - name: id
        type: int
        desc: primary key
        required: auto
      - name: event
        type: ProgressEvent
        internal: true
        desc: |
          [ProgressEvent](#ProgressEvent) for which the report is required
        required: yes
      - name: user
        type: User
        internal: true
        desc: user that created the progress report
        required: auto
      - name: created_at
        type: datetime
        required: auto
        desc: timestamp of when the object was created
      - heading: true
        title: |
          `developer` and `pm` reports only
      - name: status
        type: string
        desc: |
          current status of the project or milestone

          one of
          ```
          onschedule, behind_progressing, behind_stuck, behind, stuck
          ```

          `behind` and `stuck` are only for historical purposes
        required: |
          yes - for `developer` and `pm` events

          no - for all other cases
      - name: stuck_reason
        type: string
        desc: |
          reason for being stuck if `status` is either `behind_stuck` or `stuck` for `developer` and `pm` events

          one of
          ```
          resolving_error, poor_doc, hardware_problem, unclear_spec, personal_issue, other
          ```
        required: |
          yes - only if `status` is either `behind_stuck` or `stuck` for `developer` and `pm` events

          no - for all other cases
      - name: stuck_report
        type: string
        desc: |
          detailed reason for being stuck if `stuck_reason` is `other` for `developer` and `pm` events
        required: |
          yes - only if `stuck_reason` is `other` for `developer` and `pm` events

          no - for all other cases
      - name: percentage
        type: number
        desc: an integer `1 to 100` representing the percentage of the project or milestone completed
        required: |
          yes - for `developer` and `pm` events

          no - for all other cases
      - name: accomplished
        type: string
        desc: description of what has been accomplished since the last update
        required: |
          yes - for `developer` and `pm` events

          no - for all other cases
      - name: todo
        type: string
        desc: description of what is now being done
        required: |
          yes - for `developer` and `pm` events

          no - for all other cases
      - name: next_deadline
        type: date
        desc: date for next deadline
        required: |
          yes - for `developer` and `pm` events

          no - for all other cases
      - name: next_deadline_meet
        type: boolean
        desc: indicates whether the next deadline will be met
        required: |
          yes - for `developer` and `pm` events

          no - for all other cases
      - name: next_deadline_fail_reason
        type: string
        desc: reason why the next deadline will not be met
        required: |
          yes - only for `developer` and `pm` events for which `next_deadline_meet` is `false`

          no - for all other cases
      - heading: true
        title: |
          `developer` and `client` reports only
      - name: rate_deliverables
        type: number
        desc: an integer `1 to 5` representing the rating for what has been delivered
        required: |
          yes - for `developer` and `client` events

          no - for all other cases
      - heading: true
        title: |
          `pm` and `client` reports only
      - name: last_deadline_met
        type: boolean
        desc: indicates whether the last deadline was be met
        required: |
          yes - for `developer` and `pm` events

          no - for all other cases
      - name: deadline_miss_communicated
        type: boolean
        desc: expresses whether the last deadline miss was communicated beforehand
        required: |
          yes - only for `pm` and `client` events for which `last_deadline_met` is `false`

          no - for all other cases
      - heading: true
        title: |
          `developer` reports only
      - name: started_at
        type: date
        desc: date when the project or milestone was started
        required: |
          yes - for `developer` events

          no - for all other cases
      - heading: true
        title: |
          `pm` reports only
      - name: deadline_report
        type: string
        desc: reason why the last deadline was not be met
        required: |
          yes - only for `pm` events for which `last_deadline_met` is `false`

          no - for all other cases
      - name: team_appraisal
        type: string
        desc: detailed description of the team's performance
        required: |
          yes - only for `pm` events

          no - for all other cases
      - heading: true
        title: |
          `client` reports only
      - name: deliverable_satisfaction
        type: boolean
        desc: detailed description of the team's performance
        required: |
          yes - only for `client` events

          no - for all other cases
      - name: rate_communication
        type: number
        desc: an integer `1 to 5` representing the rating for communication with PM and developers
        required: |
          yes - for `client` events

          no - for all other cases
      - name: deliverable_report
        type: string
        desc: reason why `deliverable_satisfaction` is `false` or `rate_deliverables` is lower than `3`
        required: |
          yes - only for `client` events for which `deliverable_satisfaction` is `false` or `rate_deliverables` is lower than `3`

          no - for all other cases
      - name: communication_report
        type: string
        desc: reason why `rate_communication` is lower than `3`
        required: |
          yes - only for `client` events for which `rate_communication` is less than `3`

          no - for all other cases
  api:
    - title: Manage progress reports
      url: progress-report
- name: Comment
  model: Comment
  attributes:
    schema:
      - name: id
        type: int
        desc: primary key
        required: auto
      - name: user
        type: User
        internal: true
        desc: user that created the comment
        required: auto
      - name: body
        type: string
        desc: the comment
      - name: object_id
        type: int
        desc: id of the object the comment was added to
      - name: content_type
        type: ContentType
        internal: true
        desc: |
          [ContentType](#ContentType) of the object the comment was added to
      - name: created_at
        type: datetime
        required: auto
        desc: timestamp of when the object was created
  api:
      - title: Manage comments
        url: comment
- name: Message
  model: Message
  attributes:
    schema:
      - name: id
        type: int
        desc: primary key
        required: auto
      - name: channel
        type: Channel
        internal: true
        desc: |
          [Channel](#Channel) the message was sent in
      - name: user
        type: User
        internal: true
        desc: user that sent the message
      - name: body
        type: string
        desc: the message
      - name: created_at
        type: datetime
        required: auto
        desc: timestamp of when the object was created
      - name: alt_user
        type: json
        desc: user object for external messages e.g Slack responses
      - name: source
        type: string
        desc: |
          message source

          either `null` or `slack`
      - name: extra
        type: json
        desc: extra details about external messages e.g from Slack
    api:
      - name: sender
        type: object
        desc: |
          consolidated object representing the message sender user either user or alt_user or channel inquirer as the data source

          must include `id`, `name`, `display_name` and `short_name` with optional `email`, `avatar_url` and `inquirer` fields
  api:
    - title: Manage messages
      url: message
- name: Channel
  model: Channel
  attributes:
    schema:
      - name: id
        type: int
        desc: primary key
        required: auto
      - name: type
        type: int
        desc: |
          channel type

          ```
          direct, topic, support, developer
          ```

          default: `topic`
        required: auto
      - name: subject
        type: string
        desc: topic of the channel
      - name: last_read
        type: int
        desc: tracks last read activity id for guests
      - name: object_id
        type: int
        desc: id of the object the channel was created for
      - name: content_type
        type: ContentType
        internal: true
        desc: |
          [ContentType](#ContentType) of the object the channel was created for
      - name: created_by
        type: User
        internal: true
        desc: user that created the channel
      - name: created_at
        type: datetime
        required: auto
        desc: timestamp of when the object was created
  api:
    - title: Manage channels
      url: channel
- name: ChannelUser
  model: ChannelUser
  attributes:
    schema:
      - name: id
        type: int
        desc: primary key
        required: auto
      - name: channel
        type: Channel
        internal: true
        desc: |
          [Channel](#Channel) the participant is part of
        required: yes
      - name: user
        type: User
        internal: true
        desc: user that is participating in the channel
        required: yes
      - name: last_read
        type: int
        desc: tracks last read activity id for participant
      - name: last_email_at
        type: datetime
        desc: timestamp of when the last email about the missed messages was sent
        required: auto
      - name: created_at
        type: datetime
        required: auto
        desc: timestamp of when the object was created
- name: Upload
  model: Upload
  attributes:
    schema:
      - name: id
        type: int
        desc: primary key
        required: auto
      - name: file
        type: object
        desc: Uploaded file object
      - name: user
        type: User
        internal: true
        desc: user that uploaded the file
      - name: object_id
        type: int
        desc: id of the object the file was uploaded to
      - name: content_type
        type: ContentType
        internal: true
        desc: |
          [ContentType](#ContentType) of the object the file was uploaded to
      - name: created_at
        type: datetime
        required: auto
        desc: timestamp of when the file was uploaded
- name: ContentType
  model: ContentType
  content: |
    Django's built in ContentType model

    [https://docs.djangoproject.com/en/dev/ref/contrib/contenttypes/#the-contenttype-model](https://docs.djangoproject.com/en/dev/ref/contrib/contenttypes/#the-contenttype-model){:target="_blank"}